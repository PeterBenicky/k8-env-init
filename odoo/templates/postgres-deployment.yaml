apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-db
          image: postgres:15  # Use your preferred PostgreSQL image
          env:
            - name: PGPASSWORD
              value: root  # Password for the admin user
          command:
            - "sh"
            - "-c"
            - |
              # Wait for PostgreSQL to become available
              until pg_isready -h postgres -U admin; do
                echo "Waiting for PostgreSQL to become available..."
                sleep 2
              done
              
              # Create database and user
              psql -h postgres -U admin -c "CREATE DATABASE odoo_db;"
              psql -h postgres -U admin -c "CREATE USER odoo_user WITH PASSWORD 'root';"
              psql -h postgres -U admin -c "GRANT ALL PRIVILEGES ON DATABASE odoo_db TO odoo_user;"
      containers:
        - name: postgres
          image: postgres:15 # Sets Image
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/customers/{{ .Values.namespace }}/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgresql-data-claim
      restartPolicy: Always
